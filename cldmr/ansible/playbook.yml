- name: install base system
  hosts:
    - cldmr-server
  tasks:
    - name: install packages required
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - python3-pip

    - name: adding docker key
      apt_key:
        keyserver: keyserver.ubuntu.com
        id: 7EA0A9C3F273FCD8
        state: present

    - name: adding docker repo
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
        state: present
        filename: docker

    - name: install docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        cache_valid_time: 86400

    - name: install docker module for python
      pip:
        name: docker
    - name: Create a network
      docker_network:
        name: promnet

    - name: prepare folders for prometheus
      file:
        name: "{{ item }}"
        owner: "1001"
        mode: 0700
        state: directory
      with_items:
        - "/etc/prometheus"
        - "/var/lib/prometheus"

    - name: create prometheus template
      template:
        src: "{{ inventory_dir }}/prometheus.yml.j2"
        dest: "/etc/prometheus/prometheus.yml"
        owner: "1001"
        mode: 0600

    - name: install prometheus
      docker_container:
        name: prometheus
        image: "bitnami/prometheus:2.27.1"
        networks:
          - name: promnet
        volumes:
          - "/etc/prometheus:/opt/bitnami/prometheus/conf:ro"
          - "/var/lib/prometheus:/opt/bitnami/prometheus/data:rw"

    - name: install grafana
      docker_container:
        name: grafana
        image: "grafana/grafana:8.0.3"
        ports:
          - "0.0.0.0:80:3000/tcp"
        networks:
          - name: promnet
        env:
          GF_SECURITY_ADMIN_USER: "admin"
          GF_SECURITY_ADMIN_PASSWORD: "{{ gfpass|mandatory }}"

    - name: copy weatherExporter to target
      copy:
        src: "{{ inventory_dir }}/weather"
        dest: "/var/tmp"

    - name: build weatherExporter on target
      docker_image:
        build:
          path: /var/tmp/weather
        name: asn-weather
        tag: "0.0.1"
        source: build
    
    - name: install weather
      docker_container:
        name: weatherexporter
        image: "asn-weather:0.0.1"
        networks:
          - name: promnet
        env:
          APIKEY: "{{ weapikey|mandatory }}"
